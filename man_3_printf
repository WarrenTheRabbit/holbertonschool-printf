.TH printf 3 "2023-11-23" "Holberton School printf Manual"

.SH NAME
.B _printf \- custom printf function

.SH SYNOPSIS
\fB#include \fI"main.h"\fB\fP
.sp
\fBint _printf(const char *format, ...);\fP

.SH DESCRIPTION
The \fB_printf\fP function produces output according to a format.

.B RETURN VALUE
.in +2n
Returns the number of characters printed (excluding the null byte used to end output to strings).

If an output error is encountered, -1 is returned.
.in

.B Format of the format string
.in +2n
The format string is a constant character string composed of zero or more 
directives: ordinary characters (not \fB%\fR) which are copied unchanged to 
the output stream; and conversion specifications, each of which results in 
fetching zero or more subsequent arguments. Conversion specification is 
introduced by the character \fB%\fR and ends with a \fIconversion specifier\fR.
.in

.B Conversion Specifiers
.in +2n
A character that specifies the type of conversion to be applied. The 
conversion specifiers and their meaning are:

.RS
.B d, i
.in +2n
The \fIint\fR argument is converted to signed decimal notation.
.in
.RE

.RS
.B c
.in +2n
The \fIint\fR argument is converted to an \fIunsigned char\fR, and the 
resulting character is written.
.in
.RE

.RS
.B s
.in +2n
The \fIconst char *\fR argument is expected to be a pointer to a character 
array (pointer to a string). Characters from the array are written starting 
from the first element of the array and ending at, but not including, the 
terminating null byte ('\\0').
.in
.RE

.RS
.B %
.in +2n
A '%' is written. No argument is converted. The complete conversion 
specification is '%%'.
.in
.RE

.SH SEE ALSO
printf(3)

.SH BUGS
Code such as \fB_printf(\fIfoo\fB);\fR possibly indicates a bug, since 
\fIfoo\fR may contain a % character.

.SH EXAMPLE
To print the address of Holberton School in the form "972 Mission St., San 
Francisco, CA 94103", followed by a new line, where \fIstreet\fR, \fIcity\fR, 
and \fIstate\fR are pointers to strings:

.RS
#include "main.h"

int main(void)

{

	char *street = "Mission St.";

	char *city = "San Francisco",

	char *state = "CA";

	_printf("%d %s, %s, %s, %d\\n", 972, street, city, state, 94103);

}
.RE

To print the result of basic mathematical operations prepended by signs and 
all numbers printed with a minimum precision of two digits:

.RS
#include "main.h"

int main(void)

{

	_printf("%.2d + %.2d = %+.2d\\n", 1, 2, 1 + 2);

	_printf("%d - %d = %+d\\n", 10, 20, 10 - 20);

}
.RE

.SH AUTHOR
Warren Markham, Echezona Oji and Tingru Liu

.SH COPYRIGHT
Copyright (C) 2023 by Holberton School.

.SH NOTES
This manual page was written for the Holberton School printf project.

.SH REPORTING BUGS
Report bugs to: warren.markham@gmail.com, echyth@yahoo.com, tingru0515@gmail.com
Holberton School printf project home page: http://github.com/WarrenTheRabbit/holbertonschool-printf
General help using Holberton School printf: http://github.com/WarrenTheRabbit/holbertonschool-printf/issues

.SH COPYRIGHT
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
